#include <vector>
#include <windows.h>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <conio.h>
#include <string>

// Simbolos o Caracteres
#define CARACTER_FANTASMA 2

// Movimiento con las teclas
#define TECLA_ARRIBA       'i'
#define TECLA_ABAJO        'k'
#define TECLA_IZQUIERDA    'j'
#define TECLA_DERECHA      'l'


// Dirección de pacman
#define DIRECCION_IZQUIERDA 0
#define DIRECCION_DERECHA   1
#define DIRECCION_ARRIBA    2
#define DIRECCION_ABAJO     3
#define DIRECCION_INVALIDA  -1

// Define los colores
#define COLOR_PARED            0x009 // AZUL CLARO
#define COLOR_COMIDA           0x00F // BLANCO BRILLANTE
#define COLOR_PACMAN           0x00E // AMARILLO
#define COLOR_FANTASMA1        0x00C // ROJO CLARO
#define COLOR_FANTASMA2        0x00D  // PÚRPURA CLARO
#define COLOR_FANTASMA3        0x00B // AGUAMARINA CLARO
#define COLOR_FANTASMA4        0x00A // VERDE CLARO
#define COLOR_MARCADOR         0x00F   // BLANCO_BRILLANTE
#define COLOR_FANTASMA_ZOMBIE  0x004 // AZUL

#define BLANCO_BRILLANTE 0x00F

#define NADA 0
void PINTA_MATRIZ_MOVIMIENTOS() 
{
   for (int i = 0; i < FILAS_MAPA; ++i) {
      for (int j = 0; j < COLUMNAS_MAPA; ++j) {
         gotoxy2(j + LIMITE_DERECHO + 5, i + LIMITE_SUPERIOR);
         
         switch (matriz_movimientos[i][j]) {
            case -1:
               setCColor(0x007);
               cout << "a";
               setCColor(0x00E);
               break;
               
            case DIRECCION_ARRIBA:
               cout << "^";
               break;
            
            case DIRECCION_ABAJO:
               cout << "v";

break;
               
            case DIRECCION_IZQUIERDA:
               cout << "<";
               break;
            
            case DIRECCION_DERECHA:
               cout << ">";
               break;
         }
      }
   }
}

void inicializaMatrizMovimientos() 
{
   for (int i = 0; i < FILAS_MAPA; ++i) {
      for (int j = 0; j < COLUMNAS_MAPA; ++j) {
         matriz_movimientos[i][j] = DIRECCION_INVALIDA;

  }
   }
}

